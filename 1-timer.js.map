{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// es modules are recommended, if available, especially for typescript\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nflatpickr('input#datetime-picker', {});\n\nconst startBtn = document.querySelector('button[data-start]');\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\nconst datatimePicker = document.querySelector('#datetime-picker');\n\nstartBtn.disabled = true; //Кнопка не активна\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const currentDate = new Date();\n\n    if (selectedDates[0].getTime() < currentDate) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n      });\n      startBtn.disabled = true; //Кнопка не активна\n    } else {\n      // selectedDates = selectedDates[0].getTime();\n      startBtn.disabled = false; //Кнопка активна\n    }\n  },\n};\n\nflatpickr(datatimePicker, options);\nlet userSelectedDate;\n\nfunction startTimer() {\n  startBtn.disabled = true;\n  datatimePicker.disabled = true;\n\n  const intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const ms = userSelectedDate - currentTime;\n\n    // console.log(intervalId);\n\n    if (ms <= 1000) {\n      clearInterval(intervalId);\n      datatimePicker.disabled = true;\n    }\n  }, 1000);\n}\n\nstartBtn.addEventListener('click', startTimer);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["flatpickr","startBtn","datatimePicker","options","selectedDates","currentDate","iziToast","userSelectedDate","startTimer","intervalId","currentTime"],"mappings":"2GAUAA,EAAU,wBAAyB,CAAA,CAAE,EAErC,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EAC3C,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB,EAC3D,MAAMC,EAAiB,SAAS,cAAc,kBAAkB,EAEhED,EAAS,SAAW,GAEpB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAc,IAAI,KAEpBD,EAAc,CAAC,EAAE,QAAO,EAAKC,GAC/BC,EAAS,KAAK,CACZ,QAAS,oCACjB,CAAO,EACDL,EAAS,SAAW,IAGpBA,EAAS,SAAW,EAEvB,CACH,EAEAD,EAAUE,EAAgBC,CAAO,EACjC,IAAII,EAEJ,SAASC,GAAa,CACpBP,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1B,MAAMO,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAc,KAAK,MACdH,EAAmBG,GAIpB,MACR,cAAcD,CAAU,EACxBP,EAAe,SAAW,GAE7B,EAAE,GAAI,CACT,CAEAD,EAAS,iBAAiB,QAASO,CAAU"}